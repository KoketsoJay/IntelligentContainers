# Azure Pipelines for .NET Core app (Web, Function, ....) :)
# More info: https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=vsts
parameters:
  Name: 'ASPNetCoreWebApp'
  RestoreBuildProjects: '**/*.API.csproj'
  BuildConfiguration: 'Release'
  WorkingDirectory: 'src'
  PublishWebApp: True
  ArtifactName: 'AppDrop'
  ZipAfterPublish: True
  DeploymentSourceFolder: 'src/deployment'
  ContainerRegistryName: myacr
  ContainerRegistryServiceConnection: myacr
  ContainerRegistryRepo: projectname
  DockerFilePath: 'src'

jobs:
- job: ${{ Parameters.Name }}
  pool:
    vmImage: 'ubuntu-16.04'
    demands: npm
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      feedsToUse: config
      nugetConfigPath: '${{ Parameters.WorkingDirectory }}/nuget.config'

      projects: ${{ Parameters.RestoreBuildProjects }}

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: ${{ Parameters.RestoreBuildProjects }}
      arguments: '--configuration ${{ Parameters.BuildConfiguration }}'
      workingDirectory: ${{ Parameters.WorkingDirectory }}

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: publish
      publishWebProjects: ${{ Parameters.PublishWebApp }}
      arguments: '--configuration ${{ Parameters.BuildConfiguration }} --output $(build.artifactstagingdirectory)'
      zipAfterPublish: ${{ Parameters.ZipAfterPublish }}
      workingDirectory: ${{ Parameters.WorkingDirectory }}

  - task: CopyFiles@2
    displayName: 'Copy Deployment Files'
    inputs:
      SourceFolder: ${{ Parameters.DeploymentSourceFolder }}
      TargetFolder: '$(build.artifactstagingdirectory)/deployment'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: ${{ Parameters.ArtifactName }}'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: ${{ Parameters.ArtifactName }}
      zipAfterPublish: True

- job: BuildImage
  displayName: 'BuildImages-${{ Parameters.Name }}'
  dependsOn: ${{ Parameters.Name }}
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: Docker@2
    displayName: 'Docker Build'
    inputs:
      containerRegistry: ${{ Parameters.ContainerRegistryServiceConnection }}
      repository: ${{ Parameters.ContainerRegistryRepo }}
      command: build
      Dockerfile: ${{ Parameters.DockerFilePath }}

  - task: Docker@2
    displayName: 'Docker Push'
    inputs:
      containerRegistry: ${{ Parameters.ContainerRegistryServiceConnection }}
      repository: ${{ Parameters.ContainerRegistryRepo }}
      command: push
      Dockerfile: ${{ Parameters.DockerFilePath }}
